03-1 연산자와 연산식



책에 빠져있는 내용. 
비트 연산자 :
쉬프트 연산자 :


연산의 방향과 우선순위

개발자의 경우 ()로 묶어서 우선순위를 정한다.
★ =(대입) 의 경우 대입과 관련된 연산자만 가장 마지막에 실행된다.


03-2 연산자의 종류

1. 단항 연산자.
  1) 부호 연산자 (+,-)


  2) 증감 연산자 (++,--)



  3)논리 부정 연산자(!) : true를 false 로 , false를 true 로 변경
--------------------------------------------
package 챕터3;

public class DenyLogicOperatorExample {
public static void main(String[] args) {
	
	boolean play = true;
	System.out.println(play);
	System.out.println(!play);
	System.out.println(!!play);
	
}
}

결과
true
false
true

--------------------------------------------

2. 이항 연산자
 1) 산술 연산자 :
 ★★피연산자 : % ---> 나머지를 구하는 연산자.
 나중에 페이징 처리를 할 때 많이 사용.
      ex) 
	int result = 10/3 ---> 3 (몫)
	int result = 10%3 ---> 1 (나머지를 구함)
	3%7 => 3 
             2%1 => 0  딱 떨어져서 나머지가 0
             1%2 => 1  나눠지지 않기 때문에 처음 값을 그대로 가짐
 2)문자열 연산자 : + 문자열을 서로 결합
 
 3)비교 연산자 ( <, <=, >, >=, == , != )
	숫자는 비교가 가능하나 문자열은 비교가 되지않는다.
	== : 두 연산자의 값으 같은지를 검사
	!= : 두 연산자의 값이 다른 지를 검사

 4)논리연산자 ( &&, ||, &, |, ^, !)
 &와 | 는 비트( bit) 연산자 : 
 	ex) 0&1, 1|0  (0이 false 1이 true) 
	-> 비트 연산자이기 때문에 true나 false 가 아닌 0과 1로 결과가 나옴.


 5)대입연산자 (=, +=, -=, *=, /=, %=)

 6)증감연산자 (++, --) : 변수의 값을 1 증가(++), 1을 감소(--)
	ex) int a =10;
	a=a+1;
	a=a+1;
	-> a+=1;
	-> a++ 이나 a-- : 다른 연산을 수행하기 전에 피연산자의 값을 (1증가 or1감소)계산함
	-> ++a 이나 --a : 다른 연산을 수행 후 피연산자의 값을 (1증가or1감소) 계산함.


	
	

3. 삼항 연산자
 3개의 피연산자를 필요로 하는 연산자
  ex ) A ? B : C
   (score > 90) ? 'a' : 'b';

 

 